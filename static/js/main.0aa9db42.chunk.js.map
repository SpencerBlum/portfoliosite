{"version":3,"sources":["images/SpencerBlumlogo.png","logo.svg","images/spencerprofile.png","images/spencerprofile2.png","Components/Header.js","Components/MyProjects.js","Components/HomeBody.js","Components/Footer.js","Routes/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","classname","src","require","height","MyProjects","event","target","pauseVideo","opts","width","playerVars","autoplay","id","videoId","onReady","this","_onReady","React","Component","HomeBody","state","profileImageClick","handleProfile","setState","onClick","href","Footer","Home","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,6C,4ECA3CD,EAAOC,QAAU,IAA0B,kC,wCCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,+GCY3BC,EATD,WAEf,OACI,yBAAKC,UAAW,UACX,yBAAKC,UAAW,OAAOC,IAAKC,EAAQ,IAAkCC,OAAS,W,uCC6BzEC,E,uKA7BFC,GAELA,EAAMC,OAAOC,e,+BAIb,IAAMC,EAAO,CACTL,OAAQ,MACRM,MAAO,MACPC,WAAY,CACRC,SAAU,IAGlB,OACI,yBAAKZ,UAAU,cACX,wBAAIa,GAAG,gBAAP,2BACA,yBAAKb,UAAU,kBACX,yBAAKa,GAAG,YACJ,kBAAC,IAAD,CAASC,QAAQ,cAAcL,KAAMA,EAAMM,QAASC,KAAKC,SAAUJ,GAAG,eAE1E,yBAAKA,GAAG,YACJ,kBAAC,IAAD,CAASC,QAAQ,cAAcL,KAAMA,EAAMM,QAASC,KAAKC,SAAUJ,GAAG,qB,GAxBrEK,IAAMC,W,gBCmDfC,E,4MAhDZC,MAAQ,CACJC,mBAAmB,G,EAGvBC,cAAgB,WACZ,EAAKC,SAAS,CAAEF,mBAAoB,EAAKD,MAAMC,qB,uDAKvD,OACI,yBAAKtB,UAAW,YACZ,6BACI,yBAAKA,UAAY,YACb,yBAAKA,UAAY,kBACqB,IAAjCgB,KAAKK,MAAMC,kBAA6B,yBAAKG,QAAWT,KAAKO,cAAevB,UAAY,MAAOE,IAAKC,EAAQ,IAAiCC,OAAS,UAAa,yBAAKqB,QAAWT,KAAKO,cAAevB,UAAY,MAAOE,IAAKC,EAAQ,IAAkCC,OAAS,WAEvR,yBAAKJ,UAAW,0BAChB,uBAAGA,UAAY,cAAc0B,KAAM,iCAAkCnB,OAAO,UAA5E,IAAuF,kBAAC,IAAD,MAAvF,KACA,uBAAGP,UAAY,cAAc0B,KAAM,kCAAmCnB,OAAO,UAA7E,IAAuF,kBAAC,IAAD,MAAvF,KACA,uBAAGP,UAAY,cAAc0B,KAAM,8EAA+EnB,OAAO,UAAzH,IAAmI,kBAAC,IAAD,MAAnI,KACA,uBAAGP,UAAY,cAAc0B,KAAM,4CAA6CnB,OAAO,UAAvF,IAAiG,kBAAC,IAAD,MAAjG,OAGJ,6BACI,wCACA,mHAIR,yBAAKP,UAAY,WACb,0CACA,kmBAQJ,6BACI,kBAAC,EAAD,Y,GA3CWmB,aCOPQ,EATD,WAEf,OACI,yBAAK3B,UAAW,UACX,yBAAKC,UAAW,OAAOC,IAAKC,EAAQ,IAAkCC,OAAS,WCYxEwB,EAbH,WAEb,OAEI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCSOC,MAbf,WACE,OAEE,yBAAK7B,UAAU,IACb,kBAAC,IAAD,KACA,6BACA,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,aCHtBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0aa9db42.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SpencerBlumlogo.c19da378.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/spencerprofile.26276f5c.png\";","module.exports = __webpack_public_path__ + \"static/media/spencerprofile2.1c08625f.png\";","import React from 'react'\n\n\nconst Header = () => {\n\nreturn(\n    <div className= \"header\">\n         <img classname= \"logo\" src={require(\"../images/SpencerBlumlogo.png\")} height = \"20px\"/>\n    </div>\n)\n }\n\n export default Header;\n","\nimport React from \"react\"\nimport YouTube from 'react-youtube';\n\nclass MyProjects extends React.Component {\n\n\n    _onReady(event) {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n    render() {\n        const opts = {\n            height: '300',\n            width: '540',\n            playerVars: {\n                autoplay: 0,\n            },\n        };\n        return (\n            <div className=\"myProjects\">\n                <h1 id=\"projectTitle\">My Most Recent Projects</h1>\n                <div className=\"videoContainer\">\n                    <div id=\"videoOne\">\n                        <YouTube videoId=\"APmlnR9TWDg\" opts={opts} onReady={this._onReady} id=\"Open Care\" />\n                    </div>\n                    <div id=\"videoTwo\">\n                        <YouTube videoId=\"LyTdxMuS9EY\" opts={opts} onReady={this._onReady} id=\"Market365\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyProjects","import React, { Component } from 'react'\nimport MyProjects from \"../Components/MyProjects\"\nimport { AiOutlineGithub, AiFillMediumSquare, AiFillLinkedin} from 'react-icons/ai';\nimport { TiSocialYoutubeCircular } from 'react-icons/ti'\n\nclass HomeBody extends Component{\n\n    state = {\n        profileImageClick: false\n    }\n\n    handleProfile = () => {\n        this.setState({ profileImageClick: !this.state.profileImageClick})\n    }\n\n\nrender() {\nreturn(\n    <div className= \"homeBody\">\n        <div>\n            <div className = \"imageDiv\">\n                <div className = \"profileImage \" >\n                    {this.state.profileImageClick === false? <img onClick = {this.handleProfile} className = \"img\"  src={require(\"../images/spencerprofile.png\")} height = \"300px\" /> : <img onClick = {this.handleProfile} className = \"img\"  src={require(\"../images/spencerprofile2.png\")} height = \"300px\" /> }\n                </div>\n                <div className= \"align-center headernav\">\n                <a className = \"headericons\" href={\"https://github.com/SpencerBlum\"} target=\"_blank\" > <AiOutlineGithub/> </a>\n                <a className = \"headericons\" href={\"https://medium.com/@spencerblum\"} target=\"_blank\"> <AiFillMediumSquare/> </a>\n                <a className = \"headericons\" href={\"https://www.youtube.com/channel/UCpwJsFRyAfOaFBejR-yqv1A?view_as=subscriber\"} target=\"_blank\"> <TiSocialYoutubeCircular/> </a>\n                <a className = \"headericons\" href={\"https://www.linkedin.com/in/spencer-blum/\"} target=\"_blank\"> <AiFillLinkedin/> </a>\n                </div>\n            </div>\n            <div>\n                <h2> Skills </h2>\n                <h3> ReactJS | JavaScript | Ruby | Ruby on Rails | Redux | SQL | HTML | CSS | Sketch </h3>\n            </div>\n        </div>\n\n        <div className = \"box-div\">\n            <h2> About Me </h2>\n            <h4> \n                My name is Spencer Blum, I am a Frontend Software Developer with experience in Javascript ReactJS, Ruby, and Ruby on Rails. \n                I grew up in the Bay Area where I received experience early on with startups which launched me into getting a business degree \n                in college and founding my own startup after I graduated. On my team I found myself coding most of the CSS and HTML elements and\n                gained a strong passion for software development. I continued this passion and completed the Flatiron coding bootcamp in May of 2020 \n                and am currently looking for my next role as a software engineer.\n            </h4>\n        </div>\n        <div>\n            <MyProjects/>\n        </div>\n    </div>\n)\n }\n}\n\n export default HomeBody;","import React from 'react'\n\n\nconst Footer = () => {\n\nreturn(\n    <div className= \"footer\">\n         <img classname= \"logo\" src={require(\"../images/SpencerBlumlogo.png\")} height = \"20px\"/>\n    </div>\n)\n }\n\n export default Footer;\n","\nimport React from 'react'\nimport Header from \"../Components/Header\"\nimport HomeBody from \"../Components/HomeBody\"\nimport Footer from \"../Components/Footer\"\n\nconst Home = () => {\n\nreturn(\n\n    <div>\n        <Header/>\n        <HomeBody/>\n        <Footer/>\n    </div>\n\n)\n }\n\n export default Home","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport  Home from \"./Routes/Home.js\"\n\n\n\nfunction App() {\n  return (\n \n    <div className=\"\">\n      <Router>\n      <div>\n      <Route exact path=\"/\" render={() => <Home  /> } />\n      </div>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}